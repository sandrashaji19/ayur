<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Treatment Booking</title>
    <link rel="icon" href="/static/ico.ico" type="image/x-icon">
    <link rel="stylesheet" href="/css/bookstyle.css">
</head>
<body>
    <div class="container">
    <h1>Treatment Booking</h1>
    <form id="booking-form" method="post" enctype="multipart/form-data">
        <div>
            <label for="treatment">Choose Treatment:</label>
            <select id="treatment" name="treatment" required>
                <option value="" disabled selected>Select Treatment</option>
                <% data.forEach(function(treatment) { %>
                    <option value="<%= treatment.tname %>"><%= treatment.tname %></option>
                <% }); %>
            </select>

            <label for="dateandtime" id="date-time" class="format">SELECT DATE AND TIME </label>
            <input onchange="handleDate(event)" type="date" id="date" name="date" class="dtt" required min="<?php echo date('Y-m-d'); ?>">
            <select id="time" name="utime" class="dtt" required>
                <option value="" disabled selected>Select date to view time slots</option>
            </select>

        </div>
        <button id="post" type="button" onclick="submitpost()">Submit</button>
    </form>
    <div id="message"></div>
    </div>
    <script>

        document.getElementById('date').value='';

        document.addEventListener("DOMContentLoaded", function(event) {
            document.body.classList.add("fade-in");
        });


        async function handleDate(eve){
        const date = new Date()
        const input = new Date(eve.target.value)
        if (input >= date) {
            console.log("the date is valid");
            await fetchAvailableTimeSlots(input);
        } else {
            alert("Please select a future date.")
            eve.target.value = ''; 
        }
      }

      function convertTo12Hour(time24) {
        // Split the input time string into components
        const [hours, minutes, seconds] = time24.split(':');
        
        // Convert string hours to a number
        let hour = parseInt(hours, 10);
        // Determine AM or PM suffix
        const ampm = hour >= 12 ? 'PM' : 'AM';
        // Convert hours to 12-hour format
        hour = hour % 12 || 12;
        
        // Return formatted string
        return `${hour} ${ampm}`;
    }


      async function fetchAvailableTimeSlots(date){
        fetch('/getSlots',{
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ table: 'treatmentbooking', date})
        }).then(response => response.json())
        .then(data => {
            const timeSelect = document.getElementById('time');
            timeSelect.innerHTML = '<option value="" disabled selected>Select Time Slot</option>';
            if(data.success){
                const bookedSlots = data.data;
                const allSlots = [];
                for (let hour = 10; hour <=17; hour++){
                    const time = `${hour.toString().padStart(2,'0')}:00:00`;
                    allSlots.push(time);
                }

                freeSlots = [];
                getFreeSlots = () => {
                    allSlots.forEach(slot => {
                        if (!bookedSlots.includes(slot)){
                            freeSlots.push(slot);
                        }
                })
                console.log("fresslots is ",freeSlots);
                };

                getFreeSlots();

                if (freeSlots.length > 0){
                    freeSlots.forEach(slot => {
                    const option = document.createElement('option');
                    option.value = slot;
                    option.textContent = convertTo12Hour(slot);
                    timeSelect.appendChild(option);
                })
                }
                else{
                    timeSelect.innerHTML = '<option value="" disabled selected>No Time Slot Available</option>'
                }
                
            }
            else{
                alert("Not time slots available on the selected date");
            }
        })
      }

      function handleTime(event) {
         const timeInput = event.target;
         const enteredTime = timeInput.value;
         const minTime = timeInput.getAttribute('min');
         const maxTime = timeInput.getAttribute('max');

         if (enteredTime < minTime || enteredTime > maxTime) {
            alert('Please enter a time between ' + minTime + ' and ' + maxTime);
            timeInput.value = ''; // Clear the input value
            event.preventDefault(); // Prevent form submission
         }
      }
        

        function submitpost(){
            var form = document.getElementById("booking-form");
            const formData = new FormData(form);
            date = formData.get('date');
            time = formData.get('utime');

            option = document.getElementById("treatment").value;

            if(date!='' && time && option){
                fetch("/booktreatment",
                    {
                        method : 'POST',
                        body: formData
                    }
                ).then(response => response.json())
                .then(data=>{
                    if(data.success){
                        submitbtn = document.getElementById("post");
                        submitbtn.textContent = "Submitted";
                        submitbtn.style.animation = "shake 0.5s ease-in-out";
                        submitbtn.style.backgroundColor = "green";
                        setTimeout(()=>{
                            submitbtn.textContent = "Going Home";
                            setTimeout(()=>{
                                window.location.href="/home"    
                            },500);
                        },1000);
                    }
                    else{
                     submitbtn = document.getElementById("post");
                     submitbtn.textContent = data.message;
                     submitbtn.style.animation = "shake 0.5s ease-in-out";
                     submitbtn.style.backgroundColor="red";
                     setTimeout(()=>{
                        submitbtn.textContent="Going Home";
                        setTimeout(()=>{
                           window.location.href="/home"
                        },500)
                     },1000)
                  }
                })
            } 
            else{
                submitbtn = document.getElementById("post");
                submitbtn.textContent = "Invalid Data";
                submitbtn.style.animation = "shake 0.5s ease-in-out";
                submitbtn.style.backgroundColor = "red";
                setTimeout(()=>{
                    submitbtn.style.backgroundColor = "rgba(0,0,0,0.3)";
                    submitbtn.style.animation = "none";
                    submitbtn.offsetHeight;
                    submitbtn.textContent = "Submit"
                },2000)
            }

        }
       
    </script>

</body>
</html>
